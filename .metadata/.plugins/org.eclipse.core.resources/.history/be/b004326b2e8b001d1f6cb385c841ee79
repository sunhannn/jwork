package com.practice;

import java.util.*;

public class Bankapplication {
	private static Account[] accountArray = new Account[100];
	private static Scanner sc = new Scanner(System.in);

	public static void main(String[] args) {
		boolean run = true;
		while (run) {
			System.out.println("------------------------------------------------------------");
			System.out.println("1. 계좌생성 | 2.계좌목록 | 3.예금 | 4.출금 | 5.종료");
			System.out.println("------------------------------------------------------------");
			System.out.print("선택> ");

			int selectNo = sc.nextInt();

			if (selectNo == 1) {
				createAccount();
			} else if (selectNo == 2) {

			} else if (selectNo == 3) {
				deposit();
			} else if (selectNo == 4) {

			} else if (selectNo == 5) {
				run = false;
			}

		}
		System.out.println("프로그램 종료");

	}

	// 계좌 생성
	private static void createAccount() {

		System.out.println("----------------");
		System.out.println("계좌생성");
		System.out.println("----------------");
		System.out.print("계좌번호 : ");
		String ano = sc.next();
		System.out.print("계좌주 : ");
		String owner = sc.next();
		System.out.print("초기입금액 : ");
		int balance = sc.nextInt();
		Account acc = new Account(ano, owner, balance);
		for (int i = 0; i < accountArray.length; i++) {
			if (accountArray[i] == null) {
				accountArray[i] = acc;
				System.out.print("결과 : 계좌가 생성되었습니다.");
				break;
			}
		}

	}

	// 계좌 목록
	private static void accountList() {
		System.out.println("----------------");
		System.out.println("계좌목록");
		System.out.println("----------------");
		for (int i =0; i <accountArray.length ; i++) {
			Account acc = accountArray[i];
			if (acc != null) {
				System.out.print(acc.getAno());
				System.out.print("        ");
				System.out.print(acc.getOwner());
				System.out.print("        ");
				System.out.print(acc.getBalance());
				System.out.println();
			}
		}
		
	}

	// 예금하기
	private static void deposit() {
		System.out.println("----------------");
		System.out.println("예금");
		System.out.println("----------------");
		System.out.print("계좌번호 : ");
		String ano = sc.next();
		System.out.print("예금액 : ");
		int money = sc.nextInt();
		Account acc = findAccount(ano);
		if (acc == null) {
			System.out.println("결과 : 계좌가 없습니다.");
			return;
		}
		acc.setBalance(acc.getBalance() + money);
		System.out.println("결과 : 예금이 성공되었습니다.");
	}

	// 출금하기
	private static void withdraw() {
		System.out.println("----------------");
		System.out.println("출금");
		System.out.println("----------------");
	}

	// Account 배열에서 ano와 동일한 Account 객체 찾기
	private static Account findAccount(String ano) {
		Account acc = null;
		for (int i = 0; i < accountArray.length; i++) {
			if (accountArray[i] != null) {
				String dbAno = accountArray[i].getAno();
				if (dbAno.equals(ano)) {
					acc = accountArray[i];
					break;
				}
			}

		}
		return acc;
	}

}
