package com.study;

public class Suup10 {
	/* 클래스 : 0개 이상의 속성이나 0개 이상의 기능들을 모아놓은 집합체
	 * 	객체를 만들기 위한 최소 단위 (변수, 상수, 객체들) (메서드, 생성자, 해야할)
	 * java에서의 모듈의 최소단위
	 *  클래스의 자식으로 존재
	 * 
	 * 모듈 : 필요한 자주 쓰이는 기능들을 한군데 모아놓은 곳 
	 * 
	 * 클래스의 명명규칙 : 변수의 명명규칙과 동일 단, 앞의 첫글자만 영어 대문자로 기술 (권장)
	 * 									공백 x , 특수 $, _ (언더바)
	 * 									숫자가 맨앞에 올 수 없음
	 * 
	 *  카멜기법 : 연결되는 단어의 첫글자를 대문자로 기술하는 방법(ex ) AddSub)
	 *  스네이크기법 : 연결되는 (조합되는) 단어 사이에 _(언더바)가 들어가는 방법
	 *	
	 *	클래스 형식 : [접근제어자] [기타제어자] Class 클래스명 {
	 *								멤버필드들;
	 *								[기본 생성자]	(기술하지 않아도 알아서 존재함, 기타생성자가 없는 경우)
	 *								[기타 생성자들] (기타 생성자가 존재하면 반드시 기본 생성자로 존재해야함)
	 *								[ {초기화 블럭} ]			
	 *								[메소드들]						
	 *					}
	 *	
	 *	일반 클래스 : main메소드가 없는 클래스 , 사용하려면 반드시 객체 생성을 해줘야한다.
	 *
	 *메인 클래스 : main( )메소드가 존재하는 클래스
	 *
	 *일반 클래스일 경우 public은 파일명과 똑같은 클래스에만 붙일 수 있다.
	 *
	 *	메인메소드와 같이 있을 경우는 메인메소드만 public이 붙을 수 있다, 파일명과 같아야한다.
	 *
	 *자료형 = 클래스
	 *자료형 변수이름 = new 자료;
	 *
	 *선언 : 자료형 객체명;
	 *선언 및 공간할당 : 자료형 객체명 = new 생성자 (); // 클래스명 객체명 = new 클래스
	 *
	 */
	class Point01 {
			int x;
			int y;
	}
	
	public static void main (String[] args) {
		//객체 생성문
		Point01 pt01 = new Point01();
		
		pt01.x = 10;
		pt01.y = 20;
		
	}
	
	
}
